# -*- coding: utf-8 -*-
# Generated by Django 1.9.11 on 2017-01-16 19:02
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024, null=True, verbose_name='Title')),
                ('firstPicture', models.ImageField(blank=True, upload_to=b'action/images')),
                ('content', models.TextField(max_length=30000, null=True, verbose_name=b'Details')),
                ('createDate', models.DateTimeField(auto_now_add=True, null=True, verbose_name=b'CreatedDate')),
                ('startDate', models.DateTimeField(blank=True, null=True, verbose_name=b'StartDate')),
                ('endDate', models.DateTimeField(blank=True, null=True, verbose_name=b'EndDate')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name=b'timeUpdated')),
                ('isverified', models.BooleanField(default=False, verbose_name=b'isverified')),
                ('isactive', models.BooleanField(default=True, verbose_name=b'isActive')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Action',
                'verbose_name_plural': 'Actions',
            },
        ),
        migrations.CreateModel(
            name='ActionPicture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, upload_to=b'action/images')),
                ('actionid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Action')),
            ],
            options={
                'verbose_name': 'ActionPicture',
                'verbose_name_plural': 'ActionPictures',
            },
        ),
        migrations.CreateModel(
            name='ActionRefLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.TextField(max_length=1000)),
                ('actionid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Action')),
            ],
            options={
                'verbose_name': 'ActionRefLink',
                'verbose_name_plural': 'ActionRefLinks',
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[(b'F', b'Favorite'), (b'L', b'Like'), (b'U', b'Up Vote'), (b'D', b'Down Vote')], max_length=1)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('feed', models.IntegerField(blank=True, null=True)),
                ('question', models.IntegerField(blank=True, null=True)),
                ('answer', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
            },
        ),
        migrations.CreateModel(
            name='CalendarAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actionid', models.IntegerField()),
                ('userid', models.IntegerField()),
                ('startDate', models.DateTimeField()),
                ('endDate', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'CalendarAction',
                'verbose_name_plural': 'CalendarActions',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=2000)),
                ('createDate', models.DateTimeField(auto_now_add=True, verbose_name=b'CreatedDate')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'timeUdated')),
                ('active', models.BooleanField()),
                ('childcomment', models.ManyToManyField(related_name='_comment_childcomment_+', to='core.Comment')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friendid', models.IntegerField()),
                ('userid', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Friend',
                'verbose_name_plural': 'Friends',
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fromuser', models.IntegerField()),
                ('touser', models.IntegerField()),
                ('content', models.TextField(max_length=2000)),
                ('isaccept', models.BooleanField()),
                ('createDate', models.DateTimeField(auto_now_add=True, verbose_name=b'createdate')),
            ],
            options={
                'verbose_name': 'Invitation',
                'verbose_name_plural': 'Invitations',
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('actionid', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('noteby', models.IntegerField()),
                ('content', models.TextField(max_length=2000)),
                ('createDate', models.DateTimeField(auto_now_add=True, verbose_name=b'CreatedDate')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name=b'timeUdated')),
                ('active', models.BooleanField(default=True)),
                ('notein', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Action')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, null=True)),
                ('friend_like_id', models.IntegerField(blank=True, null=True)),
                ('user_comment_id', models.IntegerField(blank=True, null=True)),
                ('actionlikedid', models.IntegerField(blank=True, null=True)),
                ('calendaractionid', models.IntegerField(blank=True, null=True)),
                ('Invitationid', models.IntegerField(blank=True, null=True)),
                ('privateGroupid', models.IntegerField(blank=True, null=True)),
                ('createdDate', models.DateTimeField(auto_now_add=True)),
                ('notificationtype', models.CharField(choices=[(b'L', b'Liked'), (b'C', b'Commented'), (b'I', b'Invitation'), (b'A', b'Accepted'), (b'D', b'Deadlined'), (b'F', b'ClosedAction'), (b'R', b'ReplyComment')], max_length=1)),
                ('isread', models.BooleanField(default=False)),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Comment')),
                ('inviation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Invitation')),
            ],
            options={
                'ordering': ('-createdDate',),
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='PrivateGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Action')),
            ],
            options={
                'verbose_name': 'PrivateGroup',
                'verbose_name_plural': 'PrivateGroup',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actionid', models.IntegerField()),
                ('userid', models.IntegerField()),
                ('rating', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Friend',
                'verbose_name_plural': 'Friends',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField()),
                ('actionid', models.IntegerField()),
                ('report_type', models.CharField(choices=[(b'I', b'Invalid'), (b'T', b'Bad_Title'), (b'C', b'Copyright')], max_length=1)),
                ('content', models.TextField(max_length=1000, null=True, verbose_name=b'Details')),
            ],
            options={
                'verbose_name': 'Like',
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='UserAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024, null=True, verbose_name='Title')),
                ('firstPicture', models.ImageField(blank=True, upload_to=b'action/images')),
                ('content', models.TextField(max_length=30000, null=True, verbose_name=b'Details')),
                ('createDate', models.DateTimeField(auto_now_add=True, null=True, verbose_name=b'CreatedDate')),
                ('startDate', models.DateTimeField(blank=True, null=True, verbose_name=b'StartDate')),
                ('endDate', models.DateTimeField(blank=True, null=True, verbose_name=b'EndDate')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name=b'timeUpdated')),
                ('isverified', models.BooleanField(default=False, verbose_name=b'isverified')),
                ('isactive', models.BooleanField(default=True, verbose_name=b'isActive')),
                ('lat', models.FloatField(blank=True, null=True)),
                ('long', models.FloatField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Action',
                'verbose_name_plural': 'Actions',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phonenumber', models.CharField(max_length=20, null=True)),
                ('fullname', models.TextField(max_length=50, null=True, verbose_name=b'fullname')),
                ('gender', models.CharField(choices=[(b'M', b'Male'), (b'F', b'Female')], max_length=1)),
                ('occupation', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('avatar', models.ImageField(default=b'users/avatars/noimage.png', max_length=255, upload_to=b'users/avatars')),
                ('createdDate', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('birthday', models.DateTimeField(blank=True, null=True)),
                ('friends', models.ManyToManyField(related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserProfile',
                'verbose_name_plural': 'UserProfiles',
            },
        ),
        migrations.AddField(
            model_name='privategroup',
            name='members',
            field=models.ManyToManyField(related_name='members', to='core.UserProfile'),
        ),
        migrations.AddField(
            model_name='privategroup',
            name='user_created',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UserProfile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='commentby',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.UserProfile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='commentin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PrivateGroup'),
        ),
    ]
